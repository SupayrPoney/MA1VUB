@article{reactiveinteractivegraphics,
  author    = {Yihui Xie and Heike Hofmann and Xiaoyue Cheng},
  title     = {Reactive Programming for Interactive Graphics},
  journal   = {CoRR},
  volume    = {abs/1409.7256},
  year      = {2014},
  url       = {http://arxiv.org/abs/1409.7256},
  timestamp = {Wed, 01 Oct 2014 15:00:04 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/XieHC14},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{MVCPastPresent,
  author="Reenskaug, Trygve",
  title="The Model-View-Controller (MVC) Its Past and Present",
  journal="University of Oslo Draft",
  ISSN="",
  publisher="",
  year="2003",
  month="",
  volume="",
  number="",
  pages="",
  URL="http://ci.nii.ac.jp/naid/10019460482/en/",
  DOI="",
}

@inproceedings{buja1987data,
  title={A data viewer for multivariate data},
  author={Buja, Andreas and Hurley, Catherine and MCDONALD, JOHNALAN},
  booktitle={Colorado State Univ, Computer Science and Statistics. Proceedings of the 18 th Symposium on the Interface p 171-174(SEE N 89-13901 05-60)},
  year={1987}
}

@article{buja1988elements,
  title={Elements of a viewing pipeline for data analysis},
  author={Buja, Andreas and Asimov, Daniel and Hurley, Catherine and McDonald, John A},
  journal={Dynamic graphics for statistics},
  pages={277--308},
  year={1988},
  publisher={Wadsworth Monterey, CA}
}

@article{MVCvsMVP,
  author    = {M. Rizwan Jameel Qureshi and
               Fatima Sabir},
  title     = {A comparison of model view controller and model view presenter},
  journal   = {CoRR},
  volume    = {abs/1408.5786},
  year      = {2014},
  url       = {http://arxiv.org/abs/1408.5786},
  timestamp = {Fri, 12 Sep 2014 12:44:21 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/QureshiS14},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{whiting1994history,
  title={A history of data-flow languages},
  author={Whiting, Paul G and others},
  journal={Annals of the History of Computing, IEEE},
  volume={16},
  number={4},
  pages={38--59},
  year={1994},
  publisher={IEEE}
}

@incollection{FirstDataFlow,
  year={1974},
  isbn={978-3-540-06859-4},
  booktitle={Programming Symposium},
  volume={19},
  series={Lecture Notes in Computer Science},
  editor={Robinet, B.},
  doi={10.1007/3-540-06859-7_145},
  title={First version of a data flow procedure language},
  url={http://dx.doi.org/10.1007/3-540-06859-7_145},
  publisher={Springer Berlin Heidelberg},
  author={Dennis, JackB.},
  pages={362-376},
  language={English}
}

@article{cookbookMVC,
 author = {Krasner, Glenn E. and Pope, Stephen T.},
 title = {A Cookbook for Using the Model-view Controller User Interface Paradigm in Smalltalk-80},
 journal = {J. Object Oriented Program.},
 issue_date = {Aug./Sept. 1988},
 volume = {1},
 number = {3},
 month = aug,
 year = {1988},
 issn = {0896-8438},
 pages = {26--49},
 numpages = {24},
 url = {http://dl.acm.org/citation.cfm?id=50757.50759},
 acmid = {50759},
 publisher = {SIGS Publications},
 address = {Denville, NJ, USA},
} 

@article{reenskaug1979athing,
  title={Thing-model-view-editor—An example from a planningsystem},
  author={Reenskaug, Trygve},
  journal={technical note, Xerox Parc},
  year={1979}
}

@article{reenskaug1979models,
  title={Models-views-controllers},
  author={Reenskaug, Trygve},
  journal={Technical note, Xerox PARC},
  volume={32},
  number={55},
  pages={6--2},
  year={1979}
}

@article{surveyreactiveprogramming,

  author = {Bainomugisha,Engineer and Carreton,Andoni and Cutsem,Tom and Mostinckx,Stijn and Meuter,Wolfgang},

  year={2013},

  title={A survey on reactive programming},

  journal={ACM Computing Surveys (CSUR)},

  volume={45},

  number={4},

  pages={1-34},

  abstract={Reactive programming has recently gained popularity as a paradigm that is well-suited for developing event-driven and interactive applications. It facilitates the development of such applications by providing abstractions to express time-varying values and automatically managing dependencies between such values. A number of approaches have been recently proposed embedded in various languages such as Haskell, Scheme, JavaScript, Java.NET, etc. This survey describes and provides a taxonomy of existing reactive programming approaches along six axes: representation of time-varying values, evaluation model, lifting operations, multidirectionality, glitch avoidance, and support for distribution. From this taxonomy, we observe that there are still open challenges in the field of reactive programming. For instance, multidirectionality is supported only by a small number of languages, which do not automatically track dependencies between time-varying values. Similarly, glitch avoidance, which is subtle in reactive programs, cannot be ensured in distributed reactive programs using the current techniques.;Reactive programming has recently gained popularity as a paradigm that is well-suited for developing event-driven and interactive applications. It facilitates the development of such applications by providing abstractions to express time-varying values and automatically managing dependencies between such values. A number of approaches have been recently proposed embedded in various languages such as Haskell, Scheme, JavaScript, Java.NET, etc. This survey describes and provides a taxonomy of existing reactive programming approaches along six axes: representation of time-varying values, evaluation model, lifting operations, multidirectionality, glitch avoidance, and support for distribution. From this taxonomy, we observe that there are still open challenges in the field of reactive programming. For instance, multidirectionality is supported only by a small number of languages, which do not automatically track dependencies between time-varying values. Similarly, glitch avoidance, which is subtle in reactive programs, cannot be ensured in distributed reactive programs using the current techniques.;  Reactive programming has recently gained popularity as a paradigm that is well-suited for developing event-driven and interactive applications. It facilitates the development of such applications by providing abstractions to express time-varying values and automatically managing dependencies between such values. A number of approaches have been recently proposed embedded in various languages such as Haskell, Scheme, JavaScript, Java.NET, etc. This survey describes and provides a taxonomy of existing reactive programming approaches along six axes: representation of time-varying values, evaluation model, lifting operations, multidirectionality, glitch avoidance, and support for distribution. From this taxonomy, we observe that there are still open challenges in the field of reactive programming. For instance, multidirectionality is supported only by a small number of languages, which do not automatically track dependencies between time-varying values. Similarly, glitch avoidance, which is subtle in reactive programs, cannot be ensured in distributed reactive programs using the current techniques. [PUBLICATION ABSTRACT];  Reactive programming has recently gained popularity as a paradigm that is well-suited for developing event-driven and interactive applications. It facilitates the development of such applications by providing abstractions to express time-varying values and automatically managing dependencies between such values. A number of approaches have been recently proposed embedded in various languages such as Haskell, Scheme, JavaScript, Java.NET, etc. This survey describes and provides a taxonomy of existing reactive programming approaches along six axes: representation of time-varying values, evaluation model, lifting operations, multidirectionality, glitch avoidance, and support for distribution. From this taxonomy, we observe that there are still open challenges in the field of reactive programming. For instance, multidirectionality is supported only by a small number of languages, which do not automatically track dependencies between time-varying values. Similarly, glitch avoidance, which is subtle in reactive programs, cannot be ensured in distributed reactive programs using the current techniques. [PUBLICATION ABSTRACT];},

  keywords={event-driven applications; functional reactive programming; Reactive programming; reactive systems; interactive applications; dataflow programming; Embedded systems; Studies; Computer programming; Programming languages; Vocabularies & taxonomies; Surveys},

  isbn={0360-0300},

  language={English},

  url={http://ulb.summon.serialssolutions.com/2.0.0/link/0/eLvHCXMw1V1Lj5swELbaPVWq-tg-Nu2uxKmXiATwAzj0kERbVWp76Wb3imxjKloeUYCqP79jbJMou_0BPSAkEMKMh29m7JlvEMLRIvBPMCEVKeUJLgiligScYFYoRilnghVUSl3vfLOmX1Zku07uDs03ZSkqtauGbjFUQr9AqGVhkyKW_8t8r-bdsP8Nf3irC1T4CGMu-6p29snRzW6-zU07h5GPe3zusFzOy6athx-uLbNjLDzsVujkXtuKWvcCKedf21qU-aQid4AZm6Hv1KhrW_OJJrMXAKWRv_6Y_LLyZ3O86KAbQCRu0cEVWwU-4IPZUlEWO2nsx9jwWDlwNVyRVonIw5hNNL0FuGK6sGoxntkD7NgnVmvKJcQMIkaGQ_pBk6XXeSn7j6rxb28eQySejLH5-vtknMFhsdvXZvyW7QnGsDwZgXZXZH3fUmtOWdnuhu7ID9m-QM9sAOGtjAa8RI9Uc46eu-YcnsXqV8hbeUYhvLbxnEJ4RwrxGt1-ut5uPvu2HYbPNe76Oc2ZIgKLVJPu0wiQNI5yDi58QcJICMLCgsVCMlFIFcNFcBbTRPGEKvDhGcdv0FOuyyaafiyvzC-QF3FKYjDXVBTwbxZBwnPwwOHIZRqqWMzQOQgh2xnmk8yKZobeaqFkehr7PZcZpoQQzSs2Q1dOThkXerFO9h2ElxinYC3iAJ6c7udVlYGFYbqWOwxn6MKIdXrZNLHv_n3rPXpyUM9LdNbvB3UFXmIl_gJ0NmKP},

}

@article{czaplicki2012elm,
  title={Elm: Concurrent FRP for Functional GUIs},
  author={Czaplicki, Evan},
  journal={Senior thesis, Harvard University},
  year={2012}
}

@inproceedings{czaplicki2013asynchronous,
  title={Asynchronous functional reactive programming for GUIs},
  author={Czaplicki, Evan and Chong, Stephen},
  booktitle={ACM SIGPLAN Notices},
  volume={48},
  pages={411--422},
  year={2013},
  organization={ACM}
}

@article{kraeutmann2015functional,
  title={Functional Reactive Programming and its application in Functional Game Programming},
  author={Kraeutmann, David and Kindermann, Philip},
  year={2015}
}

@incollection{SwingMVC,
  author={Zukowski, John},
  year={2005},
  isbn={978-1-59059-447-6},
  booktitle={The Definitive Guide to Java Swing},
  doi={10.1007/978-1-4302-0033-8_3},
  title={The Model-View-Controller Architecture},
  url={http://dx.doi.org/10.1007/978-1-4302-0033-8_3},
  publisher={Apress},
  pages={59-65},
  language={English}
}

@article{wickham2009plumbing,
  title={The plumbing of interactive graphics},
  author={Wickham, Hadley and Lawrence, Michael and Cook, Dianne and Buja, Andreas and Hofmann, Heike and Swayne, Deborah F},
  journal={Computational Statistics},
  volume={24},
  number={2},
  pages={207--215},
  year={2009},
  publisher={Springer}
}
@article{FRPFirstPrinciples,
 author = {Wan, Zhanyong and Hudak, Paul},
 title = {Functional Reactive Programming from First Principles},
 journal = {SIGPLAN Not.},
 issue_date = {May 2000},
 volume = {35},
 number = {5},
 month = may,
 year = {2000},
 issn = {0362-1340},
 pages = {242--252},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/358438.349331},
 doi = {10.1145/358438.349331},
 acmid = {349331},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@incollection{wan2002event,
  title={Event-driven FRP},
  author={Wan, Zhanyong and Taha, Walid and Hudak, Paul},
  booktitle={Practical Aspects of Declarative Languages},
  pages={155--172},
  year={2002},
  publisher={Springer}
}

@inproceedings{wan2001real,
  title={Real-time FRP},
  author={Wan, Zhanyong and Taha, Walid and Hudak, Paul},
  booktitle={ACM SIGPLAN Notices},
  volume={36},
  number={10},
  pages={146--156},
  year={2001},
  organization={ACM}
}

@article{nowack1999structures,
  title={Structures and interactions},
  author={Nowack, Palle},
  year={1999},
  publisher={Citeseer}
}

